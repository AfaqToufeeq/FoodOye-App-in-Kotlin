// Generated by view binder compiler. Do not edit!
package com.app.foodoye.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.app.foodoye.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ConfirmorderLayoutBinding implements ViewBinding {
  @NonNull
  private final CardView rootView;

  @NonNull
  public final TextView foodNameTV;

  @NonNull
  public final TextView foodPriceTV;

  @NonNull
  public final TextView itemNoTV;

  @NonNull
  public final TextView quantityTV;

  @NonNull
  public final TextView updatedPriceTV;

  private ConfirmorderLayoutBinding(@NonNull CardView rootView, @NonNull TextView foodNameTV,
      @NonNull TextView foodPriceTV, @NonNull TextView itemNoTV, @NonNull TextView quantityTV,
      @NonNull TextView updatedPriceTV) {
    this.rootView = rootView;
    this.foodNameTV = foodNameTV;
    this.foodPriceTV = foodPriceTV;
    this.itemNoTV = itemNoTV;
    this.quantityTV = quantityTV;
    this.updatedPriceTV = updatedPriceTV;
  }

  @Override
  @NonNull
  public CardView getRoot() {
    return rootView;
  }

  @NonNull
  public static ConfirmorderLayoutBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ConfirmorderLayoutBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.confirmorder_layout, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ConfirmorderLayoutBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.foodNameTV;
      TextView foodNameTV = ViewBindings.findChildViewById(rootView, id);
      if (foodNameTV == null) {
        break missingId;
      }

      id = R.id.foodPriceTV;
      TextView foodPriceTV = ViewBindings.findChildViewById(rootView, id);
      if (foodPriceTV == null) {
        break missingId;
      }

      id = R.id.itemNoTV;
      TextView itemNoTV = ViewBindings.findChildViewById(rootView, id);
      if (itemNoTV == null) {
        break missingId;
      }

      id = R.id.quantityTV;
      TextView quantityTV = ViewBindings.findChildViewById(rootView, id);
      if (quantityTV == null) {
        break missingId;
      }

      id = R.id.updatedPriceTV;
      TextView updatedPriceTV = ViewBindings.findChildViewById(rootView, id);
      if (updatedPriceTV == null) {
        break missingId;
      }

      return new ConfirmorderLayoutBinding((CardView) rootView, foodNameTV, foodPriceTV, itemNoTV,
          quantityTV, updatedPriceTV);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
