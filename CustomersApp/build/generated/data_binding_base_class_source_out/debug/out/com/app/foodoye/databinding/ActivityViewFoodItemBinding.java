// Generated by view binder compiler. Do not edit!
package com.app.foodoye.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.AppCompatButton;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.app.foodoye.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityViewFoodItemBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final TextView FoodDesc;

  @NonNull
  public final TextView FoodName;

  @NonNull
  public final TextView FoodPrice;

  @NonNull
  public final ImageView backButton;

  @NonNull
  public final ImageView bigImage;

  @NonNull
  public final AppCompatButton directOrderbutton;

  @NonNull
  public final ConstraintLayout layoutToolBar;

  @NonNull
  public final ImageView trashDelete;

  @NonNull
  public final TextView tvTitleSpecific;

  private ActivityViewFoodItemBinding(@NonNull ConstraintLayout rootView,
      @NonNull TextView FoodDesc, @NonNull TextView FoodName, @NonNull TextView FoodPrice,
      @NonNull ImageView backButton, @NonNull ImageView bigImage,
      @NonNull AppCompatButton directOrderbutton, @NonNull ConstraintLayout layoutToolBar,
      @NonNull ImageView trashDelete, @NonNull TextView tvTitleSpecific) {
    this.rootView = rootView;
    this.FoodDesc = FoodDesc;
    this.FoodName = FoodName;
    this.FoodPrice = FoodPrice;
    this.backButton = backButton;
    this.bigImage = bigImage;
    this.directOrderbutton = directOrderbutton;
    this.layoutToolBar = layoutToolBar;
    this.trashDelete = trashDelete;
    this.tvTitleSpecific = tvTitleSpecific;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityViewFoodItemBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityViewFoodItemBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_view_food_item, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityViewFoodItemBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.FoodDesc;
      TextView FoodDesc = ViewBindings.findChildViewById(rootView, id);
      if (FoodDesc == null) {
        break missingId;
      }

      id = R.id.FoodName;
      TextView FoodName = ViewBindings.findChildViewById(rootView, id);
      if (FoodName == null) {
        break missingId;
      }

      id = R.id.FoodPrice;
      TextView FoodPrice = ViewBindings.findChildViewById(rootView, id);
      if (FoodPrice == null) {
        break missingId;
      }

      id = R.id.back_Button;
      ImageView backButton = ViewBindings.findChildViewById(rootView, id);
      if (backButton == null) {
        break missingId;
      }

      id = R.id.big_image;
      ImageView bigImage = ViewBindings.findChildViewById(rootView, id);
      if (bigImage == null) {
        break missingId;
      }

      id = R.id.directOrderbutton;
      AppCompatButton directOrderbutton = ViewBindings.findChildViewById(rootView, id);
      if (directOrderbutton == null) {
        break missingId;
      }

      id = R.id.layout_toolBar;
      ConstraintLayout layoutToolBar = ViewBindings.findChildViewById(rootView, id);
      if (layoutToolBar == null) {
        break missingId;
      }

      id = R.id.trashDelete;
      ImageView trashDelete = ViewBindings.findChildViewById(rootView, id);
      if (trashDelete == null) {
        break missingId;
      }

      id = R.id.tv_title_specific;
      TextView tvTitleSpecific = ViewBindings.findChildViewById(rootView, id);
      if (tvTitleSpecific == null) {
        break missingId;
      }

      return new ActivityViewFoodItemBinding((ConstraintLayout) rootView, FoodDesc, FoodName,
          FoodPrice, backButton, bigImage, directOrderbutton, layoutToolBar, trashDelete,
          tvTitleSpecific);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
